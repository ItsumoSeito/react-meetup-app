{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/lenovo/Documents/React Programme/nextJS/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/lenovo/Documents/React Programme/nextJS/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Documents\\\\React Programme\\\\nextJS\\\\06-onwards-to-a-bigger-project-starting-project\\\\components\\\\meetups\\\\MeetupDetail.js\",\n    _this = this;\n\nimport { ObjectId } from \"mongodb\";\n\nvar MeetupDetail = function MeetupDetail(props) {\n  var meetupData = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: meetupData.image,\n      alt: meetupData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: meetupData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n}; // export const getStaticPaths = async () => {\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://Aaron1299:2pBGMab0FbouZUlB@cluster0.cst0jtd.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const database = client.db();\n//   const collection = database.collection(\"meetups\");\n//   const meetups = await collection.find({}, { _id: 1 }).toArray();\n//   client.close();\n//   console.log(`meetups: ${meetups}`);\n//   const paths = meetups.map((meetup) => ({\n//     params: { meetupId: meetup._id.toString() },\n//   }));\n//   console.log(paths);\n//   return {\n//     fallback: false,\n//     paths: paths,\n//   };\n// };\n\n\n_c = MeetupDetail;\nexport var getStaticProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var meetupId, client, database, collection, meetupData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            meetupId = context.params[\"meetup-id\"];\n            _context.next = 3;\n            return MongoClient.connect(\"mongodb+srv://Aaron1299:2pBGMab0FbouZUlB@cluster0.cst0jtd.mongodb.net/meetups?retryWrites=true&w=majority\");\n\n          case 3:\n            client = _context.sent;\n            database = client.db();\n            collection = database.collection(\"meetups\");\n            _context.next = 8;\n            return collection.findOne({\n              _id: ObjectId(meetupId)\n            });\n\n          case 8:\n            meetupData = _context.sent;\n            console.log(meetupData);\n            client.close();\n            return _context.abrupt(\"return\", {\n              props: {\n                meetupData: {\n                  title: meetupData.title,\n                  description: meetupData.description,\n                  address: meetupData.address,\n                  image: meetupData.image,\n                  id: meetupData._id.toString()\n                }\n              }\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getStaticProps(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default MeetupDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetail\");","map":{"version":3,"sources":["C:/Users/lenovo/Documents/React Programme/nextJS/06-onwards-to-a-bigger-project-starting-project/components/meetups/MeetupDetail.js"],"names":["ObjectId","MeetupDetail","props","meetupData","image","title","description","getStaticProps","context","meetupId","params","MongoClient","connect","client","database","db","collection","findOne","_id","console","log","close","address","id","toString"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,SAAzB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEA,UAAU,CAACC,KAArB;AAA4B,MAAA,GAAG,EAAED,UAAU,CAACE;AAA5C;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,gBAAKF,UAAU,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA,gBAAIF,UAAU,CAACG;AAAf;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA,kBADF;AAOD,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;KA9BML,Y;AAgCN,OAAO,IAAMM,cAAc;AAAA,sEAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,YAAAA,QADsB,GACXD,OAAO,CAACE,MAAR,CAAe,WAAf,CADW;AAAA;AAAA,mBAGPC,WAAW,CAACC,OAAZ,CACnB,2GADmB,CAHO;;AAAA;AAGtBC,YAAAA,MAHsB;AAMtBC,YAAAA,QANsB,GAMXD,MAAM,CAACE,EAAP,EANW;AAOtBC,YAAAA,UAPsB,GAOTF,QAAQ,CAACE,UAAT,CAAoB,SAApB,CAPS;AAAA;AAAA,mBAQHA,UAAU,CAACC,OAAX,CAAmB;AAAEC,cAAAA,GAAG,EAAElB,QAAQ,CAACS,QAAD;AAAf,aAAnB,CARG;;AAAA;AAQtBN,YAAAA,UARsB;AAS5BgB,YAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AACAU,YAAAA,MAAM,CAACQ,KAAP;AAV4B,6CAYrB;AACLnB,cAAAA,KAAK,EAAE;AACLC,gBAAAA,UAAU,EAAE;AACVE,kBAAAA,KAAK,EAAEF,UAAU,CAACE,KADR;AAEVC,kBAAAA,WAAW,EAAEH,UAAU,CAACG,WAFd;AAGVgB,kBAAAA,OAAO,EAAEnB,UAAU,CAACmB,OAHV;AAIVlB,kBAAAA,KAAK,EAAED,UAAU,CAACC,KAJR;AAKVmB,kBAAAA,EAAE,EAAEpB,UAAU,CAACe,GAAX,CAAeM,QAAf;AALM;AADP;AADF,aAZqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdjB,cAAc;AAAA;AAAA;AAAA,GAApB;AAyBP,eAAeN,YAAf","sourcesContent":["import { ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetail = (props) => {\r\n  const meetupData = props.meetupData;\r\n  return (\r\n    <>\r\n      <img src={meetupData.image} alt={meetupData.title} />\r\n      <h1>{meetupData.title}</h1>\r\n      <p>{meetupData.description}</p>\r\n    </>\r\n  );\r\n};\r\n\r\n// export const getStaticPaths = async () => {\r\n//   const client = await MongoClient.connect(\r\n//     \"mongodb+srv://Aaron1299:2pBGMab0FbouZUlB@cluster0.cst0jtd.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n//   );\r\n//   const database = client.db();\r\n//   const collection = database.collection(\"meetups\");\r\n//   const meetups = await collection.find({}, { _id: 1 }).toArray();\r\n//   client.close();\r\n\r\n//   console.log(`meetups: ${meetups}`);\r\n//   const paths = meetups.map((meetup) => ({\r\n//     params: { meetupId: meetup._id.toString() },\r\n//   }));\r\n//   console.log(paths);\r\n\r\n//   return {\r\n//     fallback: false,\r\n//     paths: paths,\r\n//   };\r\n// };\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params[\"meetup-id\"];\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Aaron1299:2pBGMab0FbouZUlB@cluster0.cst0jtd.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const database = client.db();\r\n  const collection = database.collection(\"meetups\");\r\n  const meetupData = await collection.findOne({ _id: ObjectId(meetupId) });\r\n  console.log(meetupData);\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        title: meetupData.title,\r\n        description: meetupData.description,\r\n        address: meetupData.address,\r\n        image: meetupData.image,\r\n        id: meetupData._id.toString(),\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupDetail;\r\n"]},"metadata":{},"sourceType":"module"}