{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Documents\\\\React Programme\\\\nextJS\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetup-id]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { ObjectId, MongoClient } from \"mongodb\";\n\nconst MeetupDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    meetupData: props.meetupData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n\nexport default MeetupDetailPage;\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://Aaron1299:2pBGMab0FbouZUlB@cluster0.cst0jtd.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const database = client.db();\n  const collection = database.collection(\"meetups\");\n  const meetupIds = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  console.log(`meetups: ${meetupIds}`);\n  const paths = meetupIds.map(meetup => ({\n    params: {\n      \"meetup-id\": meetup._id.toString()\n    }\n  }));\n  console.log(`paths: ${paths}`);\n  return {\n    fallback: false,\n    paths: paths\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params[\"meetup-id\"];\n  const client = await MongoClient.connect(\"mongodb+srv://Aaron1299:2pBGMab0FbouZUlB@cluster0.cst0jtd.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const database = client.db();\n  const collection = database.collection(\"meetups\");\n  const meetupData = await collection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(meetupData);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        title: meetupData.title,\n        description: meetupData.description,\n        address: meetupData.address,\n        image: meetupData.image,\n        id: meetupData._id.toString()\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/lenovo/Documents/React Programme/nextJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetup-id]/index.js"],"names":["MeetupDetail","ObjectId","MongoClient","MeetupDetailPage","props","meetupData","getStaticPaths","client","connect","database","db","collection","meetupIds","find","_id","toArray","close","console","log","paths","map","meetup","params","toString","fallback","getStaticProps","context","meetupId","findOne","title","description","address","image","id"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,SAAtC;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,sBAAO,QAAC,YAAD;AAAc,IAAA,UAAU,EAAEA,KAAK,CAACC;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,eAAeF,gBAAf;AAEA,OAAO,MAAMG,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,2GADmB,CAArB;AAGA,QAAMC,QAAQ,GAAGF,MAAM,CAACG,EAAP,EAAjB;AACA,QAAMC,UAAU,GAAGF,QAAQ,CAACE,UAAT,CAAoB,SAApB,CAAnB;AACA,QAAMC,SAAS,GAAG,MAAMD,UAAU,CAACE,IAAX,CAAgB,EAAhB,EAAoB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAApB,EAAgCC,OAAhC,EAAxB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWN,SAAU,EAAlC;AACA,QAAMO,KAAK,GAAGP,SAAS,CAACQ,GAAV,CAAeC,MAAD,KAAa;AACvCC,IAAAA,MAAM,EAAE;AAAE,mBAAaD,MAAM,CAACP,GAAP,CAAWS,QAAX;AAAf;AAD+B,GAAb,CAAd,CAAd;AAGAN,EAAAA,OAAO,CAACC,GAAR,CAAa,UAASC,KAAM,EAA5B;AAEA,SAAO;AACLK,IAAAA,QAAQ,EAAE,KADL;AAELL,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CAnBM;AAqBP,OAAO,MAAMM,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAe,WAAf,CAAjB;AAEA,QAAMf,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,2GADmB,CAArB;AAGA,QAAMC,QAAQ,GAAGF,MAAM,CAACG,EAAP,EAAjB;AACA,QAAMC,UAAU,GAAGF,QAAQ,CAACE,UAAT,CAAoB,SAApB,CAAnB;AACA,QAAMN,UAAU,GAAG,MAAMM,UAAU,CAACiB,OAAX,CAAmB;AAAEd,IAAAA,GAAG,EAAEb,QAAQ,CAAC0B,QAAD;AAAf,GAAnB,CAAzB;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ;AACAE,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVwB,QAAAA,KAAK,EAAExB,UAAU,CAACwB,KADR;AAEVC,QAAAA,WAAW,EAAEzB,UAAU,CAACyB,WAFd;AAGVC,QAAAA,OAAO,EAAE1B,UAAU,CAAC0B,OAHV;AAIVC,QAAAA,KAAK,EAAE3B,UAAU,CAAC2B,KAJR;AAKVC,QAAAA,EAAE,EAAE5B,UAAU,CAACS,GAAX,CAAeS,QAAf;AALM;AADP;AADF,GAAP;AAWD,CAvBM","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { ObjectId, MongoClient } from \"mongodb\";\r\n\r\nconst MeetupDetailPage = (props) => {\r\n  return <MeetupDetail meetupData={props.meetupData} />;\r\n};\r\n\r\nexport default MeetupDetailPage;\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Aaron1299:2pBGMab0FbouZUlB@cluster0.cst0jtd.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const database = client.db();\r\n  const collection = database.collection(\"meetups\");\r\n  const meetupIds = await collection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n\r\n  console.log(`meetups: ${meetupIds}`);\r\n  const paths = meetupIds.map((meetup) => ({\r\n    params: { \"meetup-id\": meetup._id.toString() },\r\n  }));\r\n  console.log(`paths: ${paths}`);\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: paths,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params[\"meetup-id\"];\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Aaron1299:2pBGMab0FbouZUlB@cluster0.cst0jtd.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const database = client.db();\r\n  const collection = database.collection(\"meetups\");\r\n  const meetupData = await collection.findOne({ _id: ObjectId(meetupId) });\r\n  console.log(meetupData);\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        title: meetupData.title,\r\n        description: meetupData.description,\r\n        address: meetupData.address,\r\n        image: meetupData.image,\r\n        id: meetupData._id.toString(),\r\n      },\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}