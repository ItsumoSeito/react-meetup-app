{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Documents\\\\React Programme\\\\nextJS\\\\06-onwards-to-a-bigger-project-starting-project\\\\components\\\\meetups\\\\MeetupDetail.js\";\nimport { ObjectId } from \"mongodb\";\n\nconst MeetupDetail = props => {\n  const meetupData = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: meetupData.image,\n      alt: meetupData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: meetupData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // export const getStaticPaths = async () => {\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://Aaron1299:2pBGMab0FbouZUlB@cluster0.cst0jtd.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const database = client.db();\n//   const collection = database.collection(\"meetups\");\n//   const meetups = await collection.find({}, { _id: 1 }).toArray();\n//   client.close();\n//   console.log(`meetups: ${meetups}`);\n//   const paths = meetups.map((meetup) => ({\n//     params: { meetupId: meetup._id.toString() },\n//   }));\n//   console.log(paths);\n//   return {\n//     fallback: false,\n//     paths: paths,\n//   };\n// };\n\n\nexport const getStaticProps = async context => {\n  const meetupId = context.params[\"meetup-id\"];\n  const client = await MongoClient.connect(\"mongodb+srv://Aaron1299:2pBGMab0FbouZUlB@cluster0.cst0jtd.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const database = client.db();\n  const collection = database.collection(\"meetups\");\n  const meetupData = await collection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(meetupData);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        title: meetupData.title,\n        description: meetupData.description,\n        address: meetupData.address,\n        image: meetupData.image,\n        id: meetupData._id.toString()\n      }\n    }\n  };\n};\nexport default MeetupDetail;","map":{"version":3,"sources":["C:/Users/lenovo/Documents/React Programme/nextJS/06-onwards-to-a-bigger-project-starting-project/components/meetups/MeetupDetail.js"],"names":["ObjectId","MeetupDetail","props","meetupData","image","title","description","getStaticProps","context","meetupId","params","client","MongoClient","connect","database","db","collection","findOne","_id","console","log","close","address","id","toString"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,SAAzB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEA,UAAU,CAACC,KAArB;AAA4B,MAAA,GAAG,EAAED,UAAU,CAACE;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKF,UAAU,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAIF,UAAU,CAACG;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAe,WAAf,CAAjB;AAEA,QAAMC,MAAM,GAAG,MAAMC,WAAW,CAACC,OAAZ,CACnB,2GADmB,CAArB;AAGA,QAAMC,QAAQ,GAAGH,MAAM,CAACI,EAAP,EAAjB;AACA,QAAMC,UAAU,GAAGF,QAAQ,CAACE,UAAT,CAAoB,SAApB,CAAnB;AACA,QAAMb,UAAU,GAAG,MAAMa,UAAU,CAACC,OAAX,CAAmB;AAAEC,IAAAA,GAAG,EAAElB,QAAQ,CAACS,QAAD;AAAf,GAAnB,CAAzB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AACAQ,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AACLnB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVE,QAAAA,KAAK,EAAEF,UAAU,CAACE,KADR;AAEVC,QAAAA,WAAW,EAAEH,UAAU,CAACG,WAFd;AAGVgB,QAAAA,OAAO,EAAEnB,UAAU,CAACmB,OAHV;AAIVlB,QAAAA,KAAK,EAAED,UAAU,CAACC,KAJR;AAKVmB,QAAAA,EAAE,EAAEpB,UAAU,CAACe,GAAX,CAAeM,QAAf;AALM;AADP;AADF,GAAP;AAWD,CAvBM;AAyBP,eAAevB,YAAf","sourcesContent":["import { ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetail = (props) => {\r\n  const meetupData = props.meetupData;\r\n  return (\r\n    <>\r\n      <img src={meetupData.image} alt={meetupData.title} />\r\n      <h1>{meetupData.title}</h1>\r\n      <p>{meetupData.description}</p>\r\n    </>\r\n  );\r\n};\r\n\r\n// export const getStaticPaths = async () => {\r\n//   const client = await MongoClient.connect(\r\n//     \"mongodb+srv://Aaron1299:2pBGMab0FbouZUlB@cluster0.cst0jtd.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n//   );\r\n//   const database = client.db();\r\n//   const collection = database.collection(\"meetups\");\r\n//   const meetups = await collection.find({}, { _id: 1 }).toArray();\r\n//   client.close();\r\n\r\n//   console.log(`meetups: ${meetups}`);\r\n//   const paths = meetups.map((meetup) => ({\r\n//     params: { meetupId: meetup._id.toString() },\r\n//   }));\r\n//   console.log(paths);\r\n\r\n//   return {\r\n//     fallback: false,\r\n//     paths: paths,\r\n//   };\r\n// };\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params[\"meetup-id\"];\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Aaron1299:2pBGMab0FbouZUlB@cluster0.cst0jtd.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const database = client.db();\r\n  const collection = database.collection(\"meetups\");\r\n  const meetupData = await collection.findOne({ _id: ObjectId(meetupId) });\r\n  console.log(meetupData);\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        title: meetupData.title,\r\n        description: meetupData.description,\r\n        address: meetupData.address,\r\n        image: meetupData.image,\r\n        id: meetupData._id.toString(),\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupDetail;\r\n"]},"metadata":{},"sourceType":"module"}