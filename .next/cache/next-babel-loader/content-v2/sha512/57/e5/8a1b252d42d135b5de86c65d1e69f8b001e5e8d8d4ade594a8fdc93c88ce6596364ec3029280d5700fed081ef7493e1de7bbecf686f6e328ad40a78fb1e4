{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Documents\\\\React Programme\\\\nextJS\\\\06-onwards-to-a-bigger-project-starting-project\\\\components\\\\meetups\\\\MeetupDetail.js\";\nimport useCollectionFinder from \"../../hooks/useCollectionFinder\";\nimport { ObjectId } from \"mongodb\";\n\nconst MeetupDetail = props => {\n  const meetupData = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: meetupData.image,\n      alt: meetupData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: meetupData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getStaticPaths = async () => {\n  const meetups = await useCollectionFinder({}, {\n    _id: 1\n  });\n  console.log(`meetups: ${meetups}`);\n  const paths = meetups.map(meetup => ({\n    params: {\n      meetupId: meetup._id.toString()\n    }\n  }));\n  console.log(paths);\n  return {\n    fallback: false,\n    paths: paths\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params[\"meetup-id\"];\n  const meetupData = await useCollectionFinder({\n    _id: ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupData: {\n        title: meetupData.title,\n        description: meetupData.description,\n        address: meetupData.address,\n        image: meetupData.image,\n        id: meetupData._id.toString()\n      }\n    }\n  };\n};\nexport default MeetupDetail;","map":{"version":3,"sources":["C:/Users/lenovo/Documents/React Programme/nextJS/06-onwards-to-a-bigger-project-starting-project/components/meetups/MeetupDetail.js"],"names":["useCollectionFinder","ObjectId","MeetupDetail","props","meetupData","image","title","description","getStaticPaths","meetups","_id","console","log","paths","map","meetup","params","meetupId","toString","fallback","getStaticProps","context","address","id"],"mappings":";;;AAAA,OAAOA,mBAAP,MAAgC,iCAAhC;AACA,SAASC,QAAT,QAAyB,SAAzB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEA,UAAU,CAACC,KAArB;AAA4B,MAAA,GAAG,EAAED,UAAU,CAACE;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKF,UAAU,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAIF,UAAU,CAACG;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CATD;;AAWA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,OAAO,GAAG,MAAMT,mBAAmB,CAAC,EAAD,EAAK;AAAEU,IAAAA,GAAG,EAAE;AAAP,GAAL,CAAzC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWH,OAAQ,EAAhC;AACA,QAAMI,KAAK,GAAGJ,OAAO,CAACK,GAAR,CAAaC,MAAD,KAAa;AACrCC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AAD6B,GAAb,CAAZ,CAAd;AAGAP,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEA,SAAO;AACLM,IAAAA,QAAQ,EAAE,KADL;AAELN,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CAZM;AAcP,OAAO,MAAMO,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAe,WAAf,CAAjB;AAEA,QAAMZ,UAAU,GAAG,MAAMJ,mBAAmB,CAAC;AAAEU,IAAAA,GAAG,EAAET,QAAQ,CAACgB,QAAD;AAAf,GAAD,CAA5C;AAEA,SAAO;AACLd,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVE,QAAAA,KAAK,EAAEF,UAAU,CAACE,KADR;AAEVC,QAAAA,WAAW,EAAEH,UAAU,CAACG,WAFd;AAGVe,QAAAA,OAAO,EAAElB,UAAU,CAACkB,OAHV;AAIVjB,QAAAA,KAAK,EAAED,UAAU,CAACC,KAJR;AAKVkB,QAAAA,EAAE,EAAEnB,UAAU,CAACM,GAAX,CAAeQ,QAAf;AALM;AADP;AADF,GAAP;AAWD,CAhBM;AAkBP,eAAehB,YAAf","sourcesContent":["import useCollectionFinder from \"../../hooks/useCollectionFinder\";\r\nimport { ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetail = (props) => {\r\n  const meetupData = props.meetupData;\r\n  return (\r\n    <>\r\n      <img src={meetupData.image} alt={meetupData.title} />\r\n      <h1>{meetupData.title}</h1>\r\n      <p>{meetupData.description}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const meetups = await useCollectionFinder({}, { _id: 1 });\r\n  console.log(`meetups: ${meetups}`);\r\n  const paths = meetups.map((meetup) => ({\r\n    params: { meetupId: meetup._id.toString() },\r\n  }));\r\n  console.log(paths);\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: paths,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params[\"meetup-id\"];\r\n\r\n  const meetupData = await useCollectionFinder({ _id: ObjectId(meetupId) });\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        title: meetupData.title,\r\n        description: meetupData.description,\r\n        address: meetupData.address,\r\n        image: meetupData.image,\r\n        id: meetupData._id.toString(),\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupDetail;\r\n"]},"metadata":{},"sourceType":"module"}